<!doctype html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">
<meta name="referrer" content="no-referrer">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
  <meta name="renderer" content="webkit">
  <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1, minimum-scale=1,user-scalable=no">
  <link rel="stylesheet" href="/assets/css/home.css">
  <div th:replace="/home/common :: commonHeader(登录)"></div>
</head>
<body>
<h1 th:text="${info}"/>
<div id="app" class="login">
  <form action="imgvrifyControllerDefaultKaptcha">
    <input type="text" name="vrifyCode"/>
    <input type="submit" value="提交"></input>
  </form>
  <div class="main flex">
    <div class="left">
      <div class="text">
        <h1>让生活更简单</h1>
        <p>Make the design simpler</p>
      </div>
      <a href="/" class="goback"><img src="/assets/image/public/goback.png" alt=""> 返回首页</a>
    </div>
    <div class="right">
      <div class="right-box">
        <div class="navBox flex">
          <span class="nav" :class="{ active: type=='login' }" @click="toggleType('login')">账号登录</span>
          <span class="nav" :class="{ active: type=='reg' }" @click="toggleType('reg')">账号注册</span>
        </div>
        <div class="loginBox">
          <i-form :model="form" action="" :rules="ruleValidate" ref="form">
            <form-item prop="phone">
              <i-input v-model="form.phone" type="text" placeholder="请输入手机号" name="phone" required/>
            </form-item>
            <form-item v-if="type == 'reg'" prop="msg_code">
              <i-input v-model="form.msg_code" type="text" placeholder="请输入短信验证码" name="msg_code" required>
                <i-button v-if="msgError=='60'" slot="append" @click="getMsgCode">获取短信验证码</i-button>
                <i-button v-else slot="append" disabled>请在{{msgError}}秒后重新获取</i-button>
              </i-input>
            </form-item>
            <form-item prop="code">
              <i-input v-model="form.code" type="text" placeholder="请输入图文验证码" name="code" required>
                <img slot="append" alt="验证码" id="code" style="height: 100%;cursor: pointer;border:0"
                     src="/createValicode" @click="getCode"/>
              </i-input>
            </form-item>
            <form-item prop="password">
              <i-input v-model="form.password" type="password" placeholder="请输入密码" name="password" required/>
            </form-item>
            <form-item v-if="type == 'reg'">
              <i-input v-model="form.rePassword" type="password" placeholder="确认密码" name="rePassword" required/>
            </form-item>
            <form-item>
              <i-button v-show="type=='reg'" type="success" long @click="reg('form')">注册</i-button>
              <i-button v-show="type=='login'" type="success" long @click="login('form')">登录</i-button>
            </form-item>
          </i-form>
        </div>
      </div>
      <p class="Agreement">登录即同意 <a href="">《云阙网络服务协议》</a></p>
    </div>
  </div>
</div>
<script>
  const mixin = {
    data() {
      return {
        type: 'login',
        msgError: 60,
        name: "",
        form: {
          phone: '',
          code: '',
          msg_code: '',
          password: '',
          rePassword: ''
        },
        ruleValidate: {
          phone: [
            {
              validator: (rule, value, callback) => {
                if (!value) {
                  return callback(new Error('手机号不能为空'));
                } else if (!/^1[34578]\d{9}$/.test(value)) {
                  callback('手机号格式不正确');
                } else {
                  callback();
                }
              }, trigger: 'blur'
            }
          ],
          msg_code: [
            {required: true, message: '验证码不能为空', trigger: 'blur'}
          ],
          code: [
            {required: true, message: '验证码不能为空', trigger: 'blur'}
          ],
          password: [
            {
              validator: (rule, value, callback) => {
                if (!value) {
                  return callback(new Error('密码不能为空'));
                } else if (!/^[\w_-]{6,16}$/.test(value)) {
                  callback('请输入正确的6-16位密码');
                } else {
                  callback();
                }
              }, trigger: 'blur'
            }
          ]
        },
      }
    },
    methods: {
      /*获取短信验证码*/
      getMsgCode() {
        let timer = setInterval(() => {
          this.msgError = this.msgError - 1
          if (this.msgError == 0) {
            clearInterval(timer)
            this.msgError = 60
          }
        }, 1000)
        if (/^1[34578]\d{9}$/.test(this.form.phone)) {
          $.ajax({
            type: "post",
            url: "/getmsg",
            data: {phone: this.form.phone},
            dataType: "json",
            success: (res) => {
              console.log(res)
              if (res.code == 1) {
                this.success(res.msg)
              } else {
                this.error(res.msg)
              }
            }
          });
        }
      },
      /*注册*/
      reg(form) {
        this.$refs[form].validate((valid) => {
          if (valid) {
            if (this.form.password != this.form.rePassword) {
              this.error('两次输入的密码不一致')
            } else {
              $.ajax({
                type: "post",
                url: "/register",
                data: JSON.stringify(this.form),
                contentType: 'application/json',
                dataType: "json",
                success: (res) => {
                  console.log(res)
                  if (res.code == 1) {
                    this.success(res.msg)
                    this.type = 'login'
                  } else {
                    this.error(res.msg)
                  }
                }
              });
            }
          } else {
            console.log('error')
          }
        })
      },
      /*登录*/
      login(form) {
        this.$refs[form].validate((valid) => {
          if (valid) {
            $.ajax({
              type: "post",
              url: "/login",
              data: JSON.stringify(this.form),
              contentType: 'application/json',
              dataType: "json",
              success: (res) => {
                console.log(res)
                if (res.code == 1) {
                  window.location.href = '/'
                } else {
                  this.error(res.msg)
                }
              }
            });
          } else {
            console.log('error')
          }
        })
      },
      /*获取图文验证码*/
      getCode() {
        document.getElementById('code').src = '/createValicode? ? t=' + new Date().getTime()
      },
      /*切换登录、注册*/
      toggleType(type) {
        this.type = type
      },
      error(msg) {
        this.$Notice.error({
          title: msg
        });
      },
      success(msg) {
        this.$Notice.success({
          title: msg
        });
      },
    },
    mounted() {
      this.type = this.getHrefParam('type')
    }
  }
</script>
<div th:replace="/home/common :: commonFooterjs"></div>
</body>
</html>
